{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/shaders/phong.vert","webpack:///./src/ts/camera.ts","webpack:///./src/js/webgl-utils.js","webpack:///./src/ts/transform.ts","webpack:///./src/shaders/goraud.vert","webpack:///./src/ts/shaderProgram.ts","webpack:///./src/shaders sync ^\\.\\/.*\\.vert$","webpack:///./src/shaders/goraud.frag","webpack:///./src/assets/model sync ^\\.\\/.*\\.json$","webpack:///./src/shaders/flat.vert","webpack:///./src/ts/light.ts","webpack:///./src/shaders/cel.frag","webpack:///./src/shaders/flat.frag","webpack:///./src/ts/modelObject.ts","webpack:///./src/main.ts","webpack:///./src/shaders/phong.frag","webpack:///./src/shaders/cel.vert","webpack:///./src/shaders sync ^\\.\\/.*\\.frag$"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Camera","viewport","FOV","mvMatrix","pMatrix","invT_mvMatrix","viewportWidth","width","viewportHeight","height","perspective","this","fromRotationTranslation","rotation","position","invert","transpose","getMVP","WebGLUtils","makeFailHTML","msg","GET_A_WEBGL_BROWSER","OTHER_PROBLEM","setupWebGL","canvas","opt_attribs","opt_onError","handleCreationError","container","parentNode","str","WebGLRenderingContext","innerHTML","addEventListener","event","statusMessage","context","create3DContext","names","ii","getContext","e","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","Transform","zero","scale","fromValues","x","y","z","add","fromEuler","rotateX","rotateY","rotateZ","axis","multiply","setAxisAngle","LightUniforms","idx","shaderProgram","enabled","gl","getUniformLocation","la","ld","ls","gloss","BasicShader","shader_name","lightUniforms","getShader","initShaders","vert_shader","createShader","VERTEX_SHADER","shader_src","default","shaderSource","compileShader","frag_shader","FRAGMENT_SHADER","getShaderParameter","COMPILE_STATUS","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","alert","getShaderInfoLog","useProgram","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","vertexFrontColorAttribute","vertexNormalAttribute","pMatrixUniform","mvMatrixUniform","invT_mvMatrixUniform","modelMatrixUniform","invT_modelMatrixUniform","camPosUniform","camPos","uniform3fv","mvp","uniformMatrix4fv","lights","forEach","light","uniform1i","uniform1f","map","webpackContext","req","id","webpackContextResolve","Error","code","keys","resolve","PhongLight","g","ModelObject","WebGLBuffer","shader","model_name","isLoaded","undefined","loadModel","vertexAttributes","handleModelData","vertexBuffers","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","itemSize","numItems","setUniform","vertexPositions","vertexAttribPointer","FLOAT","vertexFrontcolors","vertexNormals","drawArrays","TRIANGLES","mat","mul","fromQuat","fromScaling","fromTranslation","onload","webGLStart","camera","teapotAngle","lastTime","scene_objects","shader_programs","document","createElement","style","backgroundColor","initGL","setPos","global","elapsed_time","setDiffuse","setGloss","setAmbient","setSpecular","setScale","setRot","clearColor","enable","DEPTH_TEST","body","appendChild","tick","getExtension","degToRad","degrees","Math","PI","update","cos","sin","draw","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","setMVP","world_mat","entries","prog","setWorldMatrixUniforms","setLightUniforms","setCamPosUniform","obj","updateTime","timeNow","Date","getTime"],"mappings":"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","file":"js/app.f788d4af.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default \"attribute vec3 aVertexPosition;\\nattribute vec3 aFrontColor;\\nattribute vec3 aNormal;\\n\\nuniform mat4 uModelMatrix;\\nuniform mat4 uMVMatrix;\\nuniform mat4 uPMatrix;\\nuniform mat4 uinvTMVMatrix;\\nuniform mat4 uinvTModelMatrix;\\n\\nvarying vec3 fragcolor;\\nvarying vec3 vNormal;\\nvarying vec3 pos;\\n\\nvoid main(void) {\\n    fragcolor = aFrontColor;\\n    // pos = aVertexPosition;\\n    pos = (uModelMatrix * vec4(aVertexPosition, 1)).xyz;\\n    // normal = normalize(aNormal);\\n    vNormal = ((uinvTModelMatrix * vec4(aNormal, 0.0)).xyz);\\n\\n    gl_Position = uPMatrix * uMVMatrix * vec4(pos, 1.0);\\n}\"","import { mat4, vec3, quat } from 'gl-matrix'\nimport { Transform } from './transform'\n\nclass Camera extends Transform {\n    viewportWidth: number;\n    viewportHeight: number;\n    FOV = 45;\n\n    mvMatrix: mat4 = mat4.create();\n    pMatrix: mat4 = mat4.create();\n    invT_mvMatrix: mat4 = mat4.create();\n\n    constructor (viewport: {width: number, height: number}) {\n      super()\n      this.viewportWidth = viewport.width\n      this.viewportHeight = viewport.height\n    }\n\n    setMVP () {\n      // Setup Projection Matrix\n      mat4.perspective(this.pMatrix, this.FOV, this.viewportWidth / this.viewportHeight, 0.1, 300.0)\n\n      // Setup Model-View Matrix\n      mat4.fromRotationTranslation(this.mvMatrix, this.rotation, this.position)\n      mat4.invert(this.mvMatrix, this.mvMatrix)\n\n      mat4.invert(this.invT_mvMatrix, this.mvMatrix)\n      mat4.transpose(this.invT_mvMatrix, this.invT_mvMatrix)\n      return this.getMVP()\n    }\n\n    getMVP () {\n      return {\n        pMatrix: this.pMatrix,\n        mvMatrix: this.mvMatrix,\n        invT_mvMatrix: this.invT_mvMatrix\n      }\n    }\n}\n\nexport {\n  Camera\n}\n","/*\n * Copyright 2010, Google Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @fileoverview This file contains functions every webgl program will need\n * a version of one way or another.\n *\n * Instead of setting up a context manually it is recommended to\n * use. This will check for success or failure. On failure it\n * will attempt to present an approriate message to the user.\n *\n *       gl = WebGLUtils.setupWebGL(canvas);\n *\n * For animated WebGL apps use of setTimeout or setInterval are\n * discouraged. It is recommended you structure your rendering\n * loop like this.\n *\n *       function render() {\n *         window.requestAnimFrame(render, canvas);\n *\n *         // do rendering\n *         ...\n *       }\n *       render();\n *\n * This will call your rendering function up to the refresh rate\n * of your display but will stop rendering if your app is not\n * visible.\n */\n\nWebGLUtils = (function () {\n/**\n * Creates the HTLM for a failure message\n * @param {string} canvasContainerId id of container of th\n *        canvas.\n * @return {string} The html.\n */\n  var makeFailHTML = function (msg) {\n    return '' +\n    '<table style=\"background-color: #8CE; width: 100%; height: 100%;\"><tr>' +\n    '<td align=\"center\">' +\n    '<div style=\"display: table-cell; vertical-align: middle;\">' +\n    '<div style=\"\">' + msg + '</div>' +\n    '</div>' +\n    '</td></tr></table>'\n  }\n\n  /**\n * Mesasge for getting a webgl browser\n * @type {string}\n */\n  var GET_A_WEBGL_BROWSER = '' +\n  'This page requires a browser that supports WebGL.<br/>' +\n  '<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>'\n\n  /**\n * Mesasge for need better hardware\n * @type {string}\n */\n  var OTHER_PROBLEM = '' +\n  \"It doesn't appear your computer can support WebGL.<br/>\" +\n  '<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>'\n\n  /**\n * Creates a webgl context. If creation fails it will\n * change the contents of the container of the <canvas>\n * tag to an error message with the correct links for WebGL.\n * @param {Element} canvas. The canvas element to create a\n *     context from.\n * @param {WebGLContextCreationAttirbutes} opt_attribs Any\n *     creation attributes you want to pass in.\n * @param {function:(msg)} opt_onError An function to call\n *     if there is an error during creation.\n * @return {WebGLRenderingContext} The created context.\n */\n  var setupWebGL = function (canvas, opt_attribs, opt_onError) {\n    function handleCreationError (msg) {\n      var container = canvas.parentNode\n      if (container) {\n        var str = window.WebGLRenderingContext\n          ? OTHER_PROBLEM\n          : GET_A_WEBGL_BROWSER\n        if (msg) {\n          str += '<br/><br/>Status: ' + msg\n        }\n        container.innerHTML = makeFailHTML(str)\n      }\n    }\n\n    opt_onError = opt_onError || handleCreationError\n\n    if (canvas.addEventListener) {\n      canvas.addEventListener('webglcontextcreationerror', function (event) {\n        opt_onError(event.statusMessage)\n      }, false)\n    }\n    var context = create3DContext(canvas, opt_attribs)\n    if (!context) {\n      if (!window.WebGLRenderingContext) {\n        opt_onError('')\n      }\n    }\n    return context\n  }\n\n  /**\n * Creates a webgl context.\n * @param {!Canvas} canvas The canvas tag to get context\n *     from. If one is not passed in one will be created.\n * @return {!WebGLContext} The created context.\n */\n  var create3DContext = function (canvas, opt_attribs) {\n    var names = ['webgl', 'experimental-webgl', 'webkit-3d', 'moz-webgl']\n    var context = null\n    for (var ii = 0; ii < names.length; ++ii) {\n      try {\n        context = canvas.getContext(names[ii], opt_attribs)\n      } catch (e) {}\n      if (context) {\n        break\n      }\n    }\n    return context\n  }\n\n  return {\n    create3DContext: create3DContext,\n    setupWebGL: setupWebGL\n  }\n}())\n\n/**\n * Provides requestAnimationFrame in a cross browser way.\n */\nwindow.requestAnimFrame = (function () {\n  return window.requestAnimationFrame ||\n         window.webkitRequestAnimationFrame ||\n         window.mozRequestAnimationFrame ||\n         window.oRequestAnimationFrame ||\n         window.msRequestAnimationFrame ||\n         function (/* function FrameRequestCallback */ callback, /* DOMElement Element */ element) {\n           window.setTimeout(callback, 1000 / 60)\n         }\n})()\n","import { mat4, vec3, quat } from 'gl-matrix'\ndeclare let gl: WebGLRenderingContext\n\nclass Transform {\n    position: vec3 = vec3.zero(vec3.create());\n    rotation: quat = quat.create();\n    scale: vec3 = vec3.fromValues(1, 1, 1);\n\n    constructor () {}\n\n    setScale (s: number): Transform { vec3.scale(this.scale, this.scale, s); return this }\n    setScaleXYZ (x: number, y: number, z: number): Transform { this.scale = vec3.fromValues(x, y, z); return this }\n\n    setPos (x: number, y: number, z: number): Transform { this.position = vec3.fromValues(x, y, z); return this }\n    translate (x: number, y: number, z: number): Transform { vec3.add(this.position, this.position, vec3.fromValues(x, y, z)); return this }\n\n    setRot (x: number, y: number, z: number): Transform { this.rotation = quat.fromEuler(quat.create(), x, y, z); return this }\n    rotateX (r: number): Transform { quat.rotateX(this.rotation, this.rotation, r); return this }\n    rotateY (r: number): Transform { quat.rotateY(this.rotation, this.rotation, r); return this }\n    rotateZ (r: number): Transform { quat.rotateZ(this.rotation, this.rotation, r); return this }\n    rotateAxis (r: number, axis: vec3): Transform { quat.multiply(this.rotation, this.rotation, quat.setAxisAngle(quat.create(), axis, r)); return this }\n}\n\nexport {\n  Transform\n}\n","export default \"attribute vec3 aVertexPosition;\\nattribute vec3 aFrontColor;\\nattribute vec3 aNormal;\\n\\nuniform mat4 uModelMatrix;\\nuniform mat4 uMVMatrix;\\nuniform mat4 uPMatrix;\\nuniform mat4 uinvTModelMatrix;\\n\\nstruct Light {\\n    bool enabled;\\n    vec3 position;\\n    vec3 la; // Ambient\\n    vec3 ld; // Diffuse\\n    vec3 ls; // Specular\\n    float gloss;\\n};\\n\\nuniform Light lights[4];\\nuniform vec3 uCamPos;\\n\\nvec3 normal;\\nvec3 pos;\\nvec3 viewDir;\\n\\nvarying vec3 fragcolor;\\n\\nvoid shading() {\\n    vec3 light_color = vec3(0);\\n    vec3 spec_color = vec3(0);\\n    fragcolor = vec3(0);\\n    for(int i = 0; i < 4; ++i){\\n        if(!lights[i].enabled){\\n            break;\\n        }\\n        vec3 lightDir = normalize(lights[i].position - pos);\\n\\n        float dif = dot(normal, lightDir);\\n        light_color += lights[i].la + dif * lights[i].ld;\\n        \\n        vec3 halfDir = normalize(viewDir + lightDir);\\n        float spec = pow(max(dot(normal, halfDir), 0.), lights[i].gloss);\\n        spec_color += lights[i].ls * spec;\\n    }\\n    fragcolor = light_color * aFrontColor + spec_color;\\n}\\nvoid main(void) {\\n    pos = (uModelMatrix * vec4(aVertexPosition, 1)).xyz;\\n    normal = normalize((uinvTModelMatrix * vec4(aNormal, 0.0)).xyz);\\n    viewDir = normalize(uCamPos - pos);\\n    shading();\\n    gl_Position = uPMatrix * uMVMatrix * vec4(pos, 1.0);\\n}\"","import { mat4, vec3, quat } from 'gl-matrix'\nimport { iPhongLight, PhongLight } from './light'\ndeclare let gl: WebGLRenderingContext\n\nclass LightUniforms {\n    enabled: WebGLUniformLocation;\n    position: WebGLUniformLocation;\n    la: WebGLUniformLocation;\n    ld: WebGLUniformLocation;\n    ls: WebGLUniformLocation;\n    gloss: WebGLUniformLocation;\n\n    constructor (idx: number, shaderProgram: WebGLProgram) {\n      this.enabled = gl.getUniformLocation(shaderProgram, `lights[${idx}].enabled`)\n      this.position = gl.getUniformLocation(shaderProgram, `lights[${idx}].position`)\n      this.la = gl.getUniformLocation(shaderProgram, `lights[${idx}].la`)\n      this.ld = gl.getUniformLocation(shaderProgram, `lights[${idx}].ld`)\n      this.ls = gl.getUniformLocation(shaderProgram, `lights[${idx}].ls`)\n      this.gloss = gl.getUniformLocation(shaderProgram, `lights[${idx}].gloss`)\n    }\n}\n\nclass BasicShader {\n    shaderProgram: WebGLProgram;\n\n    vertexPositionAttribute?: GLint;\n    vertexFrontColorAttribute?: GLint;\n    vertexNormalAttribute?: GLint;\n\n    modelMatrixUniform?: WebGLUniformLocation;\n    invT_modelMatrixUniform?: WebGLUniformLocation;\n    mvMatrixUniform?: WebGLUniformLocation;\n    invT_mvMatrixUniform?: WebGLUniformLocation;\n    pMatrixUniform?: WebGLUniformLocation;\n\n    lightUniforms?: LightUniforms[] = [];\n    camPosUniform?: WebGLUniformLocation;\n\n    constructor (shader_name: string) {\n      this.getShader(shader_name)\n      this.initShaders()\n    }\n\n    getShader (name: string): void {\n      const vert_shader = gl.createShader(gl.VERTEX_SHADER)\n      // console.log(require('../goraud.vert'))\n      let shader_src = require(`../shaders/${name}.vert`).default\n      gl.shaderSource(vert_shader, shader_src)\n      gl.compileShader(vert_shader)\n\n      const frag_shader = gl.createShader(gl.FRAGMENT_SHADER)\n      shader_src = require(`../shaders/${name}.frag`).default\n      gl.shaderSource(frag_shader, shader_src)\n      gl.compileShader(frag_shader)\n\n      if (!gl.getShaderParameter(vert_shader, gl.COMPILE_STATUS)) {\n        alert(gl.getShaderInfoLog(vert_shader))\n        return null\n      } else if (!gl.getShaderParameter(frag_shader, gl.COMPILE_STATUS)) {\n        alert(gl.getShaderInfoLog(frag_shader))\n        return null\n      }\n\n      this.shaderProgram = gl.createProgram()\n      gl.attachShader(this.shaderProgram, vert_shader)\n      gl.attachShader(this.shaderProgram, frag_shader)\n      gl.linkProgram(this.shaderProgram)\n      if (!gl.getProgramParameter(this.shaderProgram, gl.LINK_STATUS)) {\n        alert('Could not initialise shaders')\n      }\n    }\n\n    initShaders (): void {\n      gl.useProgram(this.shaderProgram)\n\n      this.vertexPositionAttribute = gl.getAttribLocation(this.shaderProgram, 'aVertexPosition')\n      gl.enableVertexAttribArray(this.vertexPositionAttribute)\n      this.vertexFrontColorAttribute = gl.getAttribLocation(this.shaderProgram, 'aFrontColor')\n      gl.enableVertexAttribArray(this.vertexFrontColorAttribute)\n      this.vertexNormalAttribute = gl.getAttribLocation(this.shaderProgram, 'aNormal')\n      gl.enableVertexAttribArray(this.vertexNormalAttribute)\n\n      this.pMatrixUniform = gl.getUniformLocation(this.shaderProgram, 'uPMatrix')\n      this.mvMatrixUniform = gl.getUniformLocation(this.shaderProgram, 'uMVMatrix')\n      this.invT_mvMatrixUniform = gl.getUniformLocation(this.shaderProgram, 'uinvTMVMatrix')\n      this.modelMatrixUniform = gl.getUniformLocation(this.shaderProgram, 'uModelMatrix')\n      this.invT_modelMatrixUniform = gl.getUniformLocation(this.shaderProgram, 'uinvTModelMatrix')\n\n      for (let i = 0; i < 4; i++) { this.lightUniforms.push(new LightUniforms(i, this.shaderProgram)) }\n      this.camPosUniform = gl.getUniformLocation(this.shaderProgram, 'uCamPos')\n    }\n\n    setCamPosUniform (camPos: vec3): void {\n      gl.useProgram(this.shaderProgram)\n      gl.uniform3fv(this.camPosUniform, camPos)\n    }\n\n    setWorldMatrixUniforms (mvp: {pMatrix: mat4, mvMatrix: mat4, invT_mvMatrix: mat4}): void {\n      gl.useProgram(this.shaderProgram)\n      gl.uniformMatrix4fv(this.pMatrixUniform, false, mvp.pMatrix)\n      gl.uniformMatrix4fv(this.mvMatrixUniform, false, mvp.mvMatrix)\n      gl.uniformMatrix4fv(this.invT_mvMatrixUniform, false, mvp.invT_mvMatrix)\n    }\n\n    setLightUniforms (lights: iPhongLight[]): void {\n      gl.useProgram(this.shaderProgram)\n      lights.forEach((light, idx) => {\n        gl.uniform1i(this.lightUniforms[idx].enabled, 1)\n        gl.uniform3fv(this.lightUniforms[idx].la, light.la)\n        gl.uniform3fv(this.lightUniforms[idx].ld, light.ld)\n        gl.uniform3fv(this.lightUniforms[idx].ls, light.ls)\n        gl.uniform1f(this.lightUniforms[idx].gloss, light.gloss)\n        gl.uniform3fv(this.lightUniforms[idx].position, light.position)\n      })\n    }\n}\n\nexport {\n  BasicShader\n}\n","var map = {\n\t\"./cel.vert\": \"fc65\",\n\t\"./flat.vert\": \"615c\",\n\t\"./goraud.vert\": \"148c\",\n\t\"./phong.vert\": \"00f1\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"31ff\";","export default \"precision highp float;\\n\\nvarying vec3 fragcolor;\\n\\nvoid main(void) {\\n    gl_FragColor.rgb = fragcolor;\\n    gl_FragColor.w = 1.;\\n}\"","var map = {\n\t\"./Car_road.json\": \"5ecf\",\n\t\"./Church_s.json\": \"cf80\",\n\t\"./Csie.json\": \"1370\",\n\t\"./Easter.json\": \"bc8b\",\n\t\"./Fighter.json\": \"78dc\",\n\t\"./Kangaroo.json\": \"a459\",\n\t\"./Longteap.json\": \"35cd\",\n\t\"./Mercedes.json\": \"040a\",\n\t\"./Mig27.json\": \"8798\",\n\t\"./Patchair.json\": \"cbfc\",\n\t\"./Plant.json\": \"d941\",\n\t\"./Teapot.json\": \"56d8\",\n\t\"./Tomcat.json\": \"1aab\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"511d\";","export default \"attribute vec3 aVertexPosition;\\nattribute vec3 aFrontColor;\\n// attribute vec3 aNormal;\\n\\nuniform mat4 uModelMatrix;\\nuniform mat4 uMVMatrix;\\nuniform mat4 uPMatrix;\\n\\nvarying vec3 fragcolor;\\nvarying vec3 pos;\\n\\n\\nvoid main(void) {\\n    pos = (uModelMatrix * vec4(aVertexPosition, 1.0)).xyz;\\n    fragcolor = aFrontColor;\\n    gl_Position = uPMatrix * uMVMatrix * vec4(pos, 1.0);\\n}\"","import { mat4, vec3, quat } from 'gl-matrix'\nimport { BasicShader } from '../ts/shaderProgram'\nimport { Transform } from './transform'\ndeclare let gl: WebGLRenderingContext\n\ninterface iPhongLight {\n    position: vec3;\n    la: vec3;\n    ld: vec3;\n    ls: vec3;\n    gloss: number;\n}\n\nclass PhongLight extends Transform implements iPhongLight {\n    la: vec3 = vec3.fromValues(0.5, 0.5, 0.5);\n    ld: vec3 = vec3.fromValues(0.5, 0.5, 0.5);\n    ls: vec3 = vec3.fromValues(0.9, 0.9, 0.9);\n    gloss = 1.0;\n\n    constructor () { super() }\n\n    setAmbient (x: number, y: number, z: number): PhongLight { this.la = vec3.fromValues(x, y, z); return this }\n    setDiffuse (x: number, y: number, z: number): PhongLight { this.ld = vec3.fromValues(x, y, z); return this }\n    setSpecular (x: number, y: number, z: number): PhongLight { this.ls = vec3.fromValues(x, y, z); return this }\n    setGloss (g: number): PhongLight { this.gloss = g; return this }\n}\n\nexport {\n  iPhongLight,\n  PhongLight\n}\n","export default \"precision highp float;\\n\\n// varying vec4 fragcolor;\\nvarying vec3 fragcolor;\\nvarying vec3 vNormal;\\nvarying vec3 pos;\\n\\nstruct Light {\\n    bool enabled;\\n    vec3 position;\\n    vec3 la; // Ambient\\n    vec3 ld; // Diffuse\\n    vec3 ls; // Specular\\n    float gloss;\\n};\\n\\nuniform Light lights[4];\\nuniform vec3 uCamPos;\\n\\nvoid main(void) {\\n    gl_FragColor = vec4(0, 0, 0, 1);\\n    vec3 color = fragcolor;\\n    // vec3 camPos = uCamPos;\\n    vec3 normal = normalize(vNormal);\\n    vec3 viewDir = normalize(uCamPos - pos);\\n    float rim = dot(normal, viewDir);\\n    if(rim < 0.2){\\n        return;\\n    }else if(rim < .4){\\n        gl_FragColor.rgb = vec3(1.- .2*smoothstep(.2, .4, rim));\\n        return;\\n    }\\n    // vec3 color = vec3(1, 0 ,0);\\n    vec3 light_color = vec3(0);\\n    vec3 spec_color = vec3(0);\\n    for(int i = 0; i < 4; ++i){\\n        if(!lights[i].enabled){\\n            break;\\n        }\\n        // vec3 lightPos = (invModelMatrix * vec4(lights[i].position, 1)).xyz;\\n        vec3 lightDir = normalize(lights[i].position - pos);\\n\\n        float dif = dot(normal, lightDir);\\n        if(dif > 0.6) dif = .6;\\n        else dif = .2;\\n        light_color += lights[i].la + dif * lights[i].ld;\\n        \\n        vec3 halfDir = normalize(viewDir + lightDir);\\n        float spec = pow(max(dot(normal, halfDir), 0.), lights[i].gloss);\\n        spec = step(.4, spec);\\n        // spec = smoothstep(.2, 1., spec);\\n        spec_color += lights[i].ls * spec;\\n    }\\n    gl_FragColor.rgb = light_color * color + spec_color;\\n}\"","export default \"#extension GL_OES_standard_derivatives : enable\\nprecision highp float;\\n\\nvarying vec3 fragcolor;\\nvarying vec3 vNormal;\\nvarying vec3 pos;\\n\\nstruct Light {\\n    bool enabled;\\n    vec3 position;\\n    vec3 la; // Ambient\\n    vec3 ld; // Diffuse\\n    vec3 ls; // Specular\\n    float gloss;\\n};\\n\\nuniform Light lights[4];\\nuniform vec3 uCamPos;\\n\\nvoid main(void) {\\n    // Normal\\n    vec3 dx = dFdx(pos);\\n    vec3 dy = dFdy(pos);\\n    vec3 normal = normalize(cross(dx, dy));\\n    vec3 viewDir = normalize(uCamPos - pos);\\n\\n    // Color\\n    gl_FragColor = vec4(0, 0, 0, 1);\\n    vec3 color = fragcolor;\\n    vec3 light_color = vec3(0);\\n    vec3 spec_color = vec3(0);\\n    for(int i = 0; i < 4; ++i){\\n        if(!lights[i].enabled){\\n            break;\\n        }\\n        // vec3 lightPos = (invModelMatrix * vec4(lights[i].position, 1)).xyz;\\n        vec3 lightDir = normalize(lights[i].position - pos);\\n\\n        float dif = dot(normal, lightDir);\\n        // if(dif > 0.5) dif = .7;\\n        // else dif = .2;\\n        light_color += lights[i].la + dif * lights[i].ld;\\n        \\n        vec3 halfDir = normalize(viewDir + lightDir);\\n        float spec = pow(max(dot(normal, halfDir), 0.), lights[i].gloss);\\n        // spec = step(.75, spec);\\n        // spec = smoothstep(.2, 1., spec);\\n        spec_color += lights[i].ls * spec;\\n    }\\n    gl_FragColor.rgb = light_color * color + spec_color;\\n}\"","import { mat4, vec3, quat } from 'gl-matrix'\nimport { BasicShader } from './shaderProgram'\nimport { Transform } from './transform'\ndeclare let gl: WebGLRenderingContext\n\nclass CustomWebGLBuffer extends WebGLBuffer {\n    itemSize: number;\n    numItems: number;\n}\n\ninterface VertexAttributeBuffers {\n    vertexPositions?: CustomWebGLBuffer,\n    vertexNormals?: CustomWebGLBuffer,\n    vertexFrontcolors?: CustomWebGLBuffer,\n    vertexBackcolors?: CustomWebGLBuffer,\n    vertexTextureCoords?: CustomWebGLBuffer\n}\n\ninterface VertexAttributes {\n    vertexPositions?: Float32Array,\n    vertexNormals?: Float32Array,\n    vertexFrontcolors?: Float32Array,\n    vertexBackcolors?: Float32Array,\n    vertexTextureCoords?: Float32Array,\n}\n\nclass ModelObject extends Transform {\n    position: vec3 = vec3.zero(vec3.create());\n    rotation: quat = quat.create();\n    scale: vec3 = vec3.fromValues(1, 1, 1);\n\n    isLoaded = false;\n\n    vertexAttributes: VertexAttributes;\n    vertexBuffers: VertexAttributeBuffers;\n    shaderProgram: BasicShader;\n\n    constructor (\n      shader: BasicShader,\n      model_name?: string\n    ) {\n      super()\n      this.shaderProgram = shader\n      if (model_name !== undefined) { this.loadModel(model_name) }\n    }\n\n    loadModel (name: string): void {\n      // const request = new XMLHttpRequest()\n      // console.log(require(`../assets/model/${name}.json`))\n      // // request.open('GET', `./src/assets/model/${name}.json`)\n      // // console.log(`./src/assets/model/${name}.json`)\n      // request.onreadystatechange = () => {\n      //   if (request.readyState === 4) {\n      //     console.log(request.responseText);\n      //     this.vertexAttributes = JSON.parse(request.responseText) as VertexAttributes\n      //     // console.log(this.vertexAttributes);\n      //     this.handleModelData()\n      //   }\n      // }\n      // request.send()\n      // console.log(require(`../assets/model/${name}.json`))\n      this.vertexAttributes = require(`../assets/model/${name}.json`) as VertexAttributes;\n      this.handleModelData();\n    }\n\n    handleModelData (): void {\n      // console.log(this.vertexAttributes.vertexPositions);\n      this.vertexBuffers = {}\n      for (const key in this.vertexAttributes) {\n        if (key !== undefined && key !== 'vertexTextureCoords') {\n          // let gl = global.gl;\n          const buf = gl.createBuffer() as CustomWebGLBuffer\n          gl.bindBuffer(gl.ARRAY_BUFFER, buf)\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(<Float32Array> this.vertexAttributes[key]), gl.STATIC_DRAW)\n          buf.itemSize = 3\n          buf.numItems = this.vertexAttributes[key].length / 3\n          // console.log(buf);\n          this.vertexBuffers[key] = buf\n        }\n      }\n      this.isLoaded = true\n    }\n\n    draw (): void {\n      if (!this.isLoaded) { return }\n      gl.useProgram(this.shaderProgram.shaderProgram)\n      this.setUniform()\n\n      // Setup teapot position data\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers.vertexPositions)\n      gl.vertexAttribPointer(this.shaderProgram.vertexPositionAttribute,\n        this.vertexBuffers.vertexPositions.itemSize,\n        gl.FLOAT,\n        false,\n        0,\n        0)\n\n      // Setup teapot front color data\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers.vertexFrontcolors)\n      gl.vertexAttribPointer(this.shaderProgram.vertexFrontColorAttribute,\n        this.vertexBuffers.vertexFrontcolors.itemSize,\n        gl.FLOAT,\n        false,\n        0,\n        0)\n\n      // Setup teapot normal data\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers.vertexNormals)\n      gl.vertexAttribPointer(this.shaderProgram.vertexNormalAttribute,\n        this.vertexBuffers.vertexNormals.itemSize,\n        gl.FLOAT,\n        false,\n        0,\n        0)\n\n      gl.drawArrays(gl.TRIANGLES, 0, this.vertexBuffers.vertexPositions.numItems)\n    }\n\n    setUniform (): void {\n      const mat = mat4.create()\n      mat4.mul(mat, mat4.fromQuat(mat4.create(), this.rotation), mat4.fromScaling(mat4.create(), this.scale))\n      mat4.mul(mat, mat4.fromTranslation(mat4.create(), this.position), mat)\n      gl.uniformMatrix4fv(this.shaderProgram.modelMatrixUniform, false, mat)\n\n      mat4.transpose(mat, mat4.invert(mat, mat))\n      gl.uniformMatrix4fv(this.shaderProgram.invT_modelMatrixUniform, false, mat)\n    }\n\n    setScale (s: number):ModelObject { super.setScale(s); return this }\n    setScaleXYZ (x: number, y: number, z: number):ModelObject { super.setScaleXYZ(x, y, z); return this }\n\n    setPos (x: number, y: number, z: number): ModelObject { super.setPos(x, y, z); return this }\n    translate (x: number, y: number, z: number): ModelObject { super.translate(x, y, z); return this }\n\n    setRot (x: number, y: number, z: number): ModelObject { super.setRot(x, y, z); return this }\n    rotateX (r: number): ModelObject { super.rotateX(r); return this }\n    rotateY (r: number): ModelObject { super.rotateY(r); return this }\n    rotateZ (r: number): ModelObject { super.rotateZ(r); return this }\n    rotateAxis (r: number, axis: vec3): ModelObject { super.rotateAxis(r, axis); return this }\n}\n\nexport {\n  ModelObject\n}\n","/* https://github.com/toji/gl-matrix */\nimport { mat4, vec3, quat } from 'gl-matrix'\nimport './js/webgl-utils'\nimport { createApp } from 'vue'\nimport App from './App.vue'\n\n/* Custom Module */\nimport { Transform } from './ts/transform'\nimport { ModelObject } from './ts/modelObject'\nimport { BasicShader } from './ts/shaderProgram'\nimport { Camera } from './ts/camera'\nimport { PhongLight } from './ts/light'\n\nwindow.onload = () => webGLStart();\n\ndeclare global {\n    interface Window {\n        // from webgl-utils\n        requestAnimFrame: Function\n    }\n    var gl: WebGLRenderingContext\n    var elapsed_time: number\n}\n\n// createApp(App).mount('#app')\n\n\n// common variables\ndeclare var gl: WebGLRenderingContext;\ndeclare var elapsed_time: number;\n\nvar teapotAngle = 20;\nvar lastTime    = 0;\n\nvar scene_objects: { [name: string]: ModelObject } = {};\nvar shader_programs: { [name: string]: BasicShader } = {};\nvar lights: PhongLight[] = [];\n\nvar camera: Camera;\n\nfunction webGLStart() {\n    var canvas = <HTMLCanvasElement> document.createElement(\"canvas\")\n    canvas.id = \"ICG-canvas\"\n    canvas.style.backgroundColor = \"#0078D4\"\n    canvas.width  = 1280;\n    canvas.height = 720;\n    initGL(canvas);\n\n    camera = new Camera({width: canvas.width, height: canvas.height});\n    camera.setPos(0 , 0, 30);\n\n    global.elapsed_time = .1;\n    var l = new PhongLight().setDiffuse(.9, .2, .2).setGloss(64);\n    l.setPos(-15, 0, 0);\n    lights.push(l);\n    l = new PhongLight().setAmbient(0, 0, 0).setDiffuse(.3, .3, .3).setGloss(1).setSpecular(.1, .1, .1);\n    l.setPos(0, 50, 50);\n    lights.push(l);\n    l = new PhongLight().setAmbient(0, 0, 0).setDiffuse(.8, .8, .1).setGloss(4).setSpecular(.1, .1, .1);\n    l.setPos(0, 50, -100);\n    lights.push(l);\n\n    shader_programs[\"phong\"] = new BasicShader('phong');\n    shader_programs[\"goraud\"] = new BasicShader('goraud');\n    shader_programs[\"flat\"] = new BasicShader('flat');\n    shader_programs[\"cel\"] = new BasicShader('cel');\n    scene_objects[\"easter\"] = new ModelObject(shader_programs[\"flat\"], 'Easter').setScale(10).setRot(-90, 30, 0).setPos(-15, 0, 0);\n    scene_objects[\"easter2\"] = new ModelObject(shader_programs[\"phong\"], 'Easter').setScale(10).setRot(-90, -30, 0).setPos(15, 0, 0);\n    scene_objects[\"teapot\"] = new ModelObject(shader_programs[\"cel\"], 'Teapot').setScale(0.5);\n    // scene_objects[\"kangaroo\"] = new ModelObject(shader_programs[\"phong\"], 'Kangaroo').setScale(20).setRot(-90, 0, 0).setPos(20, 10, 0);\n\n    gl.clearColor(0.5, 0.5, 0.5, 1.0);\n    gl.enable(gl.DEPTH_TEST);\n    \n    document.body.appendChild(canvas)\n    tick();\n}\n\n\nfunction initGL(canvas: HTMLCanvasElement) {\n    try {\n        global.gl = <WebGLRenderingContext> canvas.getContext(\"webgl\") || <WebGLRenderingContext> canvas.getContext(\"experimental-webgl\");\n        if(!gl.getExtension('OES_standard_derivatives')){\n            throw('OES std extension not supported!')\n        }\n    } \n    catch (e) {\n    }\n    if (!gl) {\n        alert(\"Could not initialise WebGL, sorry :-(\");\n    }\n}\n\nfunction degToRad(degrees) {\n    return degrees * Math.PI / 180;\n}\n\nfunction update() {\n    teapotAngle += degToRad(0.02) * elapsed_time;\n    scene_objects['teapot'].rotateY(degToRad(0.05) * elapsed_time); \n    // scene_objects['easter'].rotateZ(degToRad(0.05) * elapsed_time); \n    // scene_objects['kangaroo'].rotateZ(degToRad(0.01) * elapsed_time); \n    lights[0].setPos(500*Math.cos(teapotAngle), lights[0].position[1], 500*Math.sin(teapotAngle))\n    // scene_objects['teapot'].translate(0, 0, -.01 * elapsed_time);\n    // camera.rotateY(degToRad(0.05) * elapsed_time);\n}\n\nfunction draw() {\n    gl.viewport(0, 0, camera.viewportWidth, camera.viewportHeight);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    camera.setMVP();\n    let world_mat = camera.getMVP();\n    Object.entries(shader_programs).forEach(\n        ([, prog]) => {\n            prog.setWorldMatrixUniforms(world_mat);\n            prog.setLightUniforms(lights);\n            prog.setCamPosUniform(camera.position);\n        }\n    );\n    Object.entries(scene_objects).forEach(\n        ([, obj]) => obj.draw()\n    );\n}\n\n/* WebGL Util */\n\nfunction updateTime() {\n    var timeNow = new Date().getTime();\n    if (lastTime != 0) {\n        elapsed_time = timeNow - lastTime;\n    }\n    lastTime = timeNow;\n}\n\nfunction tick() {\n    // window.requestAnimationFrame(tick);\n    window.requestAnimFrame(tick);\n    update();\n    draw();\n    updateTime();\n}\n","export default \"precision highp float;\\n\\nvarying vec3 fragcolor;\\nvarying vec3 vNormal;\\nvarying vec3 pos;\\n\\nstruct Light {\\n    bool enabled;\\n    vec3 position;\\n    vec3 la; // Ambient\\n    vec3 ld; // Diffuse\\n    vec3 ls; // Specular\\n    float gloss;\\n};\\n\\nuniform Light lights[4];\\nuniform vec3 uCamPos;\\n\\nvoid main(void) {\\n    gl_FragColor = vec4(0, 0, 0, 1);\\n    vec3 color = fragcolor;\\n    // vec3 camPos = uCamPos;\\n    vec3 normal = normalize(vNormal);\\n    vec3 viewDir = normalize(uCamPos - pos);\\n    float rim = dot(normal, viewDir);\\n    // if(rim < 0.2){\\n    //     return;\\n    // }else if(rim < .4){\\n    //     gl_FragColor.rgb = vec3(1.- .2*smoothstep(.2, .4, rim));\\n    //     return;\\n    // }\\n    // vec3 color = vec3(1, 0 ,0);\\n    vec3 light_color = vec3(0);\\n    vec3 spec_color = vec3(0);\\n    for(int i = 0; i < 4; ++i){\\n        if(!lights[i].enabled){\\n            break;\\n        }\\n        // vec3 lightPos = (invModelMatrix * vec4(lights[i].position, 1)).xyz;\\n        vec3 lightDir = normalize(lights[i].position - pos);\\n\\n        float dif = dot(normal, lightDir);\\n        // if(dif > 0.5) dif = .7;\\n        // else dif = .2;\\n        light_color += lights[i].la + dif * lights[i].ld;\\n        \\n        vec3 halfDir = normalize(viewDir + lightDir);\\n        float spec = pow(max(dot(normal, halfDir), 0.), lights[i].gloss);\\n        // spec = step(.75, spec);\\n        // spec = smoothstep(.2, 1., spec);\\n        spec_color += lights[i].ls * spec;\\n    }\\n    gl_FragColor.rgb = light_color * color + spec_color;\\n}\"","export default \"attribute vec3 aVertexPosition;\\nattribute vec3 aFrontColor;\\nattribute vec3 aNormal;\\n\\nuniform mat4 uModelMatrix;\\nuniform mat4 uMVMatrix;\\nuniform mat4 uPMatrix;\\nuniform mat4 uinvTMVMatrix;\\nuniform mat4 uinvTModelMatrix;\\n\\nvarying vec3 fragcolor;\\nvarying vec3 vNormal;\\nvarying vec3 pos;\\n\\nmat4 transpose(mat4 inMatrix) { \\n    vec4 i0 = inMatrix[0]; \\n    vec4 i1 = inMatrix[1]; \\n    vec4 i2 = inMatrix[2]; \\n    vec4 i3 = inMatrix[3]; \\n\\n    mat4 outMatrix = mat4(\\n       vec4(i0.x, i1.x, i2.x, i3.x), \\n       vec4(i0.y, i1.y, i2.y, i3.y), \\n       vec4(i0.z, i1.z, i2.z, i3.z), \\n       vec4(i0.w, i1.w, i2.w, i3.w) \\n       ); \\n\\n    return outMatrix; \\n} \\n\\nvoid main(void) {\\n    fragcolor = aFrontColor;\\n    // pos = aVertexPosition;\\n    pos = (uModelMatrix * vec4(aVertexPosition, 1)).xyz;\\n    // normal = normalize(aNormal);\\n    vNormal = ((uinvTModelMatrix * vec4(aNormal, 0.0)).xyz);\\n\\n    gl_Position = uPMatrix * uMVMatrix * vec4(pos, 1.0);\\n}\"","var map = {\n\t\"./cel.frag\": \"a036\",\n\t\"./flat.frag\": \"a4e4\",\n\t\"./goraud.frag\": \"3444\",\n\t\"./phong.frag\": \"ee5e\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"fefc\";"],"sourceRoot":""}